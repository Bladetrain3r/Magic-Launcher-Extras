# /etc/nginx/sites-available/mlswarm
# Barebones nginx config for MLSwarm HTTP server
# SSL handled by load balancer, this just does rate limiting and proxying

# Rate limiting zones
# Limit per-IP request rate
limit_req_zone $binary_remote_addr zone=swarm_limit:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=swarm_post:10m rate=2r/s;

# Connection limit per IP
limit_conn_zone $binary_remote_addr zone=addr:10m;

server {
   listen 80;
   server_name example.com; 

   # Redirect HTTP to HTTPS
   location / {
      return 301 https://$host$request_uri;
   }
}

server {
   listen 443 ssl;
   server_name example.com;

   ssl_certificate /etc/nginx/ssl/certs/fullchain.cer;
   ssl_certificate_key /etc/nginx/ssl/private/example.com.key;
   ssl_protocols TLSv1.2 TLSv1.3;
   tls_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';

   # Gzip compression
   gzip on;
   gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
   gzip_min_length 5000;

   # Basic security headers
   add_header X-Content-Type-Options nosniff;
   add_header X-Frame-Options DENY;
   
   # Logs (optional, comment out for performance)
   access_log /var/log/nginx/mlswarm_access.log;
   error_log /var/log/nginx/mlswarm_error.log warn;
   
   # Connection limits
   limit_conn addr 10;  # Max 10 concurrent connections per IP
   
   # Timeouts
   client_body_timeout 10s;
   client_header_timeout 10s;
   client_max_body_size 256K;  # Swarm messages should be small
   
   # Serve the HTML directly
   location = / {
       limit_req zone=swarm_limit burst=20 nodelay;
       
       root /var/www/mlswarm;
       try_files /swarm.html =404;
   }
   
   # Swarm file operations
   location ~ ^/swarm/(.+)$ {
       # GET - reading swarm files (higher rate)
       limit_req zone=swarm_limit burst=20 nodelay;
             
       # Proxy to MLSwarm HTTP server
       proxy_pass http://127.0.0.1:8080;
       proxy_http_version 1.1;
       
       # Simple headers
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       
       # Timeouts for backend
       proxy_connect_timeout 5s;
       proxy_send_timeout 10s;
       proxy_read_timeout 10s;
       
       # Disable buffering for real-time feel
       proxy_buffering off;
   }
   
   # Block everything else
   location / {
       return 404;
   }
   
   # Health check endpoint for load balancer
   location = /health {
       access_log off;
       return 200 "OK\n";
       add_header Content-Type text/plain;
   }
}